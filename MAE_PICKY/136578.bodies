class MISSION_PUSH_DISTRIBUTEUR_MONOCHROME_State
!!!148610.cpp!!!	create(inout stm : MAE_PICKY) : void
  _doentry(stm);
  {
    stm._set_currentState(stm._mae_picky_state._jeu_state._mission_push_distributeur_monochrome_state._waypoint_init_state);
#ifdef VERBOSE_STATE_MACHINE
    puts("DEBUG : current state is now .MAE_PICKY.JEU.MISSION_PUSH_DISTRIBUTEUR_MONOCHROME.WAYPOINT INIT");
#endif
    stm._mae_picky_state._jeu_state._mission_push_distributeur_monochrome_state._waypoint_init_state.create(stm);
  }
!!!148866.cpp!!!	_upper(inout stm : MAE_PICKY) : MAE_PICKY::AnyState
  return &stm._mae_picky_state._jeu_state;
!!!173314.cpp!!!	_doentry(inout stm : MAE_PICKY) : void
#ifdef VERBOSE_STATE_MACHINE
	puts("DEBUG : execute entry behavior of .MAE_PICKY.JEU.MISSION_PUSH_DISTRIBUTEUR_MONOCHROME");
#endif
cout<<"[MAE][JEU][MISSION PUSH DISTRIBUTEUR MONOCHROME]"<<endl;
!!!380290.cpp!!!	_exit16(inout stm : MAE_PICKY) : void
  {
    stm._set_currentState(stm._mae_picky_state._jeu_state._decision_mission_state);
#ifdef VERBOSE_STATE_MACHINE
    puts("DEBUG : current state is now .MAE_PICKY.JEU.DECISION_MISSION");
#endif
    stm._mae_picky_state._jeu_state._decision_mission_state.create(stm);
  }
